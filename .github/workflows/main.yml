name: Build for Multiple Platforms

on:
  push:
    tags:
      - "v*"
    # branches:
    #   - master

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-2022"
            args: ""

    runs-on: ${{ matrix.platform }}
    env:
      NAME_APP: taskflow
      APP_HOME_FOLDER: TaskFlow
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      MONGODB_NAME: TaskFlow
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JSONDB_NAME: task_flow_db
      SMTP_USERNAME: rusnakdima03@gmail.com
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP_SERVER: smtp.gmail.com
      SMTP_PORT: 587
      RESET_TOKEN_EXPIRY_HOURS: 1

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "NAME_APP=taskflow" > src-tauri/.env
          echo "APP_HOME_FOLDER=TaskFlow" >> src-tauri/.env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> src-tauri/.env
          echo "MONGODB_NAME=TaskFlow" >> src-tauri/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> src-tauri/.env
          echo "JSONDB_NAME=task_flow_db" >> src-tauri/.env
          echo "SMTP_USERNAME=rusnakdima03@gmail.com" >> src-tauri/.env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> src-tauri/.env
          echo "SMTP_SERVER=smtp.gmail.com" >> src-tauri/.env
          echo "SMTP_PORT=587" >> src-tauri/.env
          echo "RESET_TOKEN_EXPIRY_HOURS=1" >> src-tauri/.env

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install pnpm
        run: |
          npm i -g pnpm

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build app
        run: |
          chmod +x ./build-optimized.sh
          FORCE_BUILD=true ./build-optimized.sh build desktop release ${{ matrix.args }}

      - name: Upload to Existing Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/rpm/*.rpm
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.app.tar.gz
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.app.tar.gz
            src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/x86_64-apple-darwin/release/bundle/macos/*.app.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
