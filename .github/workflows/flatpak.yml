name: Build Flatpak

on:
  push:
    tags:
      - "v*"

jobs:
  build-flatpak:
    permissions:
      contents: write
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            flatpak \
            flatpak-builder

      - name: Create .env file
        run: |
          echo "NAME_APP=taskflow" > src-tauri/.env
          echo "APP_HOME_FOLDER=TaskFlow" >> src-tauri/.env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> src-tauri/.env
          echo "MONGODB_NAME=TaskFlow" >> src-tauri/.env
          echo "JWT_SECRET=q3tb@!jnk$^hg8*u5zv9&m6x1s2w7p4r0e3" >> src-tauri/.env
          echo "JSONDB_NAME=task_flow_db" >> src-tauri/.env

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Tauri app
        run: pnpm tauri build --bundles deb

      - name: Add flathub remote
        run: |
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

      - name: Install Flatpak runtime and SDK
        run: |
          flatpak install --user --noninteractive flathub org.gnome.Platform//48
          flatpak install --user --noninteractive flathub org.gnome.Sdk//48

      - name: Prepare Flatpak structure
        run: |
          mkdir -p flatpak-build/files/bin
          mkdir -p flatpak-build/files/share/applications
          mkdir -p flatpak-build/files/share/icons/hicolor/128x128/apps
          mkdir -p flatpak-build/files/share/icons/hicolor/32x32/apps
          mkdir -p flatpak-build/export

      - name: Copy binary and resources
        run: |
          # Copy binary
          cp src-tauri/target/release/taskflow flatpak-build/files/bin/
          chmod +x flatpak-build/files/bin/taskflow

          # Copy icons
          cp src-tauri/icons/128x128.png flatpak-build/files/share/icons/hicolor/128x128/apps/com.tcs.taskflow.png
          cp src-tauri/icons/32x32.png flatpak-build/files/share/icons/hicolor/32x32/apps/com.tcs.taskflow.png

      - name: Create desktop file
        run: |
          cat > flatpak-build/files/share/applications/com.tcs.taskflow.desktop <<EOF
          [Desktop Entry]
          Type=Application
          Name=TaskFlow
          Exec=taskflow
          Icon=com.tcs.taskflow
          Categories=Utility;
          Terminal=false
          EOF

      - name: Create Flatpak manifest for export
        run: |
          cat > flatpak-build/metadata <<EOF
          [Application]
          name=com.tcs.taskflow
          runtime=org.gnome.Platform/x86_64/48
          sdk=org.gnome.Sdk/x86_64/48
          command=taskflow

          [Context]
          shared=ipc;network;
          sockets=x11;wayland;
          devices=dri;
          filesystems=home;
          EOF

      - name: Build Flatpak repository
        run: |
          mkdir -p flatpak-repo
          flatpak build-export flatpak-repo flatpak-build

      - name: Create Flatpak bundle
        run: |
          flatpak build-bundle flatpak-repo taskflow.flatpak com.tcs.taskflow

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: taskflow.flatpak
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
